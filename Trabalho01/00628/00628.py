# -*- coding: utf-8 -*-
"""00628.ipynb

\title{Resposta do Trabalho 01 | 2.1 - Pesquisa Completa: 00628}
\subtitle{Análise e Complexidade de Algoritmos}
\author{Dornélio Mori Junior}
\affil{PPComp --- Campus Serra, Ifes}
\date{2021/04}

Automatically generated by Colaboratory.

Original file is located at
    https://github.com/TNK443/AnCA/blob/main/Trabalho01/00628/00628.py
    https://colab.research.google.com/github/TNK443/AnCA/blob/main/Trabalho01/00628/00628.py
    
    https://github.com/TNK443/AnCA/blob/main/Trabalho01/00628/PyBook/00628.ipynb
    https://colab.research.google.com/github/TNK443/AnCA/blob/main/Trabalho01/00628/PyBook/00628.ipynb
"""

def exec_input(listaRules, output, pos):
    if (pos == len(listaRules)):
      print(output, end='\n')
      return
    
    if (listaRules[pos]=='#'):
      for i in range(len(listWords)):
          exec_input(listaRules, output+listWords[i], pos+1)
    elif (listaRules[pos]=='0'):
      for i in range(10):
          exec_input(listaRules, output+(f'{i}'), pos+1)

if __name__ == '__main__':
   try:
        # INPUT
        while True:
            # First line contains a number of words in the dictionary (n).
            nWords = ''
            nWords = input()
            if (nWords == 100) or (nWords == ''): break
            nWords = int(nWords)

            # The words themselves are given in (n) consecutive lines.
            listWords = []
            for n in range(nWords):
                auxImput = input()
                listWords.append(auxImput)
            
            # The next line contains number of rules (m).
            mRules = int(input())

            print('--', end='\n')

            # Similarly consecutivemlines containrules.
            for m in range(mRules):
                listRules = input()
                exec_input(listRules,'',0)
        
   except EOFError:
        pass

   finally:
        exit(0)

   exit(0)