# -*- coding: utf-8 -*-
"""11935.ipynb

\title{Resposta do Trabalho 01 | 2.2 - Dividir e Conquistar: 11935}
\subtitle{Análise e Complexidade de Algoritmos}
\author{Dornélio Mori Junior}
\affil{PPComp --- Campus Serra, Ifes}
\date{2021/04}

Automatically generated by Colaboratory.

Original file is located at
    https://github.com/TNK443/AnCA/blob/main/Trabalho01/11935/11935.py
    https://colab.research.google.com/github/TNK443/AnCA/blob/main/Trabalho01/11935/11935.py
    
    https://github.com/TNK443/AnCA/blob/main/Trabalho01/11935/PyBook/11935.ipynb
    https://colab.research.google.com/github/TNK443/AnCA/blob/main/Trabalho01/11935/PyBook/11935.ipynb
"""

def consigo_realizar_o_percurso(f):
  fuel = f
  leak = 0.0
  consume = -1.0
  lastD = 0.0

  for j in range(len(events)):
      evt = events[j].split()
      if (consume > 0.0): fuel -= ((float(evt[0]) - lastD)*(consume / 100.0 + leak))
      if (fuel < 0.0): return False
      if (evt[1]=='Fuel'): consume = float(evt[3])
      elif (evt[1]=='Gas'): fuel = f
      elif (evt[1]=='Leak'): leak += 1.0
      elif (evt[1]=='Mechanic'): leak = 0.0
      lastD = float(evt[0])
  return True
  
if __name__ == '__main__':
  events = []
  while True:
    auxInput = input()
    if (auxInput == '0 Fuel consumption 0'): break
    events.append(auxInput)
    if (auxInput[len(auxInput)-4:] == 'Goal'):
      dec = 4 #1e-4 Parâmetro de precisão de casas decimais para atender ao requisito de output com precisão de 3 casas decimais.
      hi = 1e4
      lo, mid = 0.0,0.0

      while round(abs(hi - lo),dec) > 0:
        mid = (lo + hi)/2.0
        if (consigo_realizar_o_percurso(mid)): hi = mid
        else: lo = mid
      print(format(mid,'.3f'))
      events = []
  exit(0)